//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------

#include <GDX/Utils/Trace.h>

//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------

#include "SceneManager.h"

using namespace GDX;

namespace Game
{
	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	SceneManager::SceneManager()
		:
		m_scenes(0),
		m_currentScene(nullptr),
		m_insertedSceneID(0)
	{
	}

	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	SceneManager::~SceneManager()
	{
	}

	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	void SceneManager::Update(float deltaTime)
	{
		m_currentScene->Update(deltaTime);
	}

	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	unsigned int SceneManager::Add(std::shared_ptr<SceneBase> scene)
	{
		auto inserted = m_scenes.insert(std::make_pair(m_insertedSceneID, scene));

		if (inserted.second)
		{
			scene->OnCreate();

			m_insertedSceneID++;
		}

		return inserted.first->first;
	}

	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	void SceneManager::SwitchToScene(unsigned int id)
	{
		TraceFileFunc();
		trace->Dbg("id = %d", id);

		auto it = m_scenes.find(id);

		if (it != m_scenes.end())
		{
			if (m_currentScene != nullptr)
			{
				m_currentScene->OnHide();
			}

			m_currentScene = it->second;

			m_currentScene->OnShow();
		}
	}

	//------------------------------------------------------------------------------------------------------
	// -----------------------------------------------------------------------------------------------------

	void SceneManager::RemoveScene(unsigned int id)
	{
		auto it = m_scenes.find(id);

		if (it != m_scenes.end())
		{
			if (m_currentScene == it->second)
			{
				m_currentScene = nullptr;
			}

			it->second->OnDestroy();

			m_scenes.erase(it);
		}
	}
}

